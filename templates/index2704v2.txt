<!doctype html>
<html lang="en">

<head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css"
        integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO" crossorigin="anonymous">
    
    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.3.1/socket.io.js"></script>
    
    <title>Live Streaming Demonstration</title>
</head>

<body>
    <div class="container">
        <div class="row">
            <div class="col-lg-8  offset-lg-2">
                <h3 class="mt-5">Live Streaming</h3>
                
            </div>
            <div class="col-lg-8  offset-lg-2 mt-3" id="textRDiv">
                <p id="textR">Text Result: {{ text_result }}</p>
                <button onclick="textToSpeech('{{ text_result }}')" class="btn btn-primary" id="textR">Play</button>
            </div>
        </div>
    </div>






    <div id="container">
        <h1>Video Chat</h1>
        <div id="videoContainer">
            <img src="{{ url_for('video_feed') }}" width="100%" id="localVideo">
            <img src="{{ url_for('video_feed') }}" width="100%" id="remoteVideo">
            <video id="localVideo" autoplay></video>
            <video id="remoteVideo" autoplay></video>
        </div>
        <div id="controls">
            <button onclick="createRoom()">Create Room</button>
            <input type="text" id="roomId" placeholder="Enter Room ID">
            <button onclick="joinRoom()">Join</button>
        </div>
        <div id="usernameSection">
            <input type="text" id="username" placeholder="Enter your username">
        </div>
    </div>




    <script>
        var socket = io.connect('http://localhost:8000');
        var localVideo = document.getElementById('localVideo');
        var remoteVideo = document.getElementById('remoteVideo');
        var roomId = '';

        function createRoom() {
            fetch('/create_room')
                .then(response => response.text())
                .then(data => {
                    roomId = data;
                    document.getElementById('roomId').value = roomId;
                });
        }

        function joinRoom() {
            roomId = document.getElementById('roomId').value;
            if (roomId.trim() === '') {
                showError("Please enter a valid Room ID.");
                return;
            }
            var username = document.getElementById('username').value;
            if (username.trim() === '') {
                showError("Please enter a username.");
                return;
            }
            socket.emit('join', { username: username, room: roomId });
        }

        function showError(message) {
            var errorDiv = document.createElement('div');
            errorDiv.classList.add('error');
            errorDiv.textContent = message;
            document.body.appendChild(errorDiv);
            setTimeout(function() {
                errorDiv.style.opacity = '0';
                setTimeout(function() {
                    errorDiv.remove();
                }, 300);
            }, 3000);
        }

        socket.on('ready', function(data) {
            navigator.mediaDevices.getUserMedia({ video: true, audio: true })
                .then(function(stream) {
                    localVideo.srcObject = stream;
                    localStream = stream;
                    socket.emit('call', { callee: data.username });
                })
                .catch(function(err) {
                    console.log('getUserMedia error: ' + err.name);
                });
        });

        socket.on('call', function(data) {
            navigator.mediaDevices.getUserMedia({ video: true, audio: true })
                .then(function(stream) {
                    remoteVideo.srcObject = stream;
                    remoteStream = stream;
                    socket.emit('accept', { caller: data.caller });
                })
                .catch(function(err) {
                    console.log('getUserMedia error: ' + err.name);
                });
        });

        socket.on('accept', function(data) {
            navigator.mediaDevices.getUserMedia({ video: true, audio: true })
                .then(function(stream) {
                    localVideo.srcObject = stream;
                    localStream = stream;
                })
                .catch(function(err) {
                    console.log('getUserMedia error: ' + err.name);
                });
        });
    </script>












    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {

            setInterval(function () {
                $("#textRDiv").load(location.href + " #textR");
            }, 1000);

        });
    </script>



    <!-- JavaScript for Text to Speech -->
    <script>
        function textToSpeech(text) {
            // Create a new SpeechSynthesisUtterance object
            var msg = new SpeechSynthesisUtterance();

            // Set the text to be spoken
            msg.text = text;

            // Set the voice
            msg.voice = speechSynthesis.getVoices()[0]; // You can adjust the voice here if needed

            // Speak the text
            speechSynthesis.speak(msg);
        }
    </script>
</body>

</html>